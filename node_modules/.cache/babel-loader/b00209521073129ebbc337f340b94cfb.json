{"ast":null,"code":"import XLSX from 'xlsx';\nimport HelloWorld from './components/HelloWorld.vue';\nimport Modal from './components/Modal.vue';\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld,\n    Modal\n  },\n\n  data() {\n    return {\n      downloadFileHeader: {\n        headerName: {},\n        headerMapping: {}\n      }\n    };\n  },\n\n  created() {\n    this.setExcelDownloadHeader();\n  },\n\n  methods: {\n    downloadFile() {\n      // let axios = {}\n      // let url = {}\n      // axios.post(url, {\n      // body api\n      // }).then(res => {\n      const res = {\n        data: [{\n          myName: \"Đức\",\n          age: 18,\n          address: \"HN\"\n        }, {\n          myName: \"Đức\",\n          age: 18,\n          address: \"HN\"\n        }, {\n          myName: \"Đức\",\n          age: 18,\n          address: \"HN\"\n        }, {\n          myName: \"Đức\",\n          age: 18,\n          address: \"HN\"\n        }]\n      };\n      var wb = XLSX.book_new();\n      var jobHarr = [this.downloadJobHeader.headerName];\n      var jobWorksheet = XLSX.utils.json_to_sheet(res.data, {\n        header: this.downloadJobHeader.headerMapping,\n        skipHeader: true,\n        origin: 'A2'\n      }); // set width for column\n\n      jobWorksheet[\"!cols\"] = [{\n        width: 20\n      }, {\n        width: 20\n      }, {\n        width: 20\n      }];\n      XLSX.utils.sheet_add_json(jobWorksheet, jobHarr, {\n        skipHeader: true,\n        origin: 'A1'\n      });\n      XLSX.utils.book_append_sheet(wb, jobWorksheet, 'Job');\n      XLSX.writeFile(wb, 'NameFile.xlsx', {\n        cellStyles: true\n      }); // })\n    },\n\n    setExcelDownloadHeader() {\n      var downloadFileHeader = {}; // set header column excel\n\n      downloadFileHeader['my Name'] = 'myName';\n      downloadFileHeader['age'] = 'age';\n      downloadFileHeader['address'] = 'address';\n      this.downloadFileHeader.headerName = Object.keys(downloadFileHeader);\n      this.downloadFileHeader.headerMapping = this.downloadFileHeader.headerName.map(function (item, idx, arr) {\n        return downloadJobHeader[item];\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":"AASA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,UAAP,MAAuB,6BAAvB;AACA,OAAOC,KAAP,MAAkB,wBAAlB;AACA,eAAe;EACbC,IAAI,EAAE,KADO;EAEbC,UAAU,EAAE;IACVH,UADU;IAEVC;EAFU,CAFC;;EAMbG,IAAI,GAAG;IACL,OAAO;MACLC,kBAAkB,EAAE;QAClBC,UAAU,EAAE,EADM;QAElBC,aAAa,EAAE;MAFG;IADf,CAAP;EAMD,CAbY;;EAcbC,OAAO,GAAG;IACR,KAAKC,sBAAL;EACD,CAhBY;;EAiBbC,OAAO,EAAE;IACPC,YAAY,GAAG;MACb;MACA;MACA;MACE;MACF;MACE,MAAMC,GAAE,GAAI;QACVR,IAAI,EAAE,CACJ;UACES,MAAM,EAAE,KADV;UAEEC,GAAG,EAAE,EAFP;UAGEC,OAAO,EAAE;QAHX,CADI,EAMJ;UACEF,MAAM,EAAE,KADV;UAEEC,GAAG,EAAE,EAFP;UAGEC,OAAO,EAAE;QAHX,CANI,EAWJ;UACEF,MAAM,EAAE,KADV;UAEEC,GAAG,EAAE,EAFP;UAGEC,OAAO,EAAE;QAHX,CAXI,EAgBJ;UACEF,MAAM,EAAE,KADV;UAEEC,GAAG,EAAE,EAFP;UAGEC,OAAO,EAAE;QAHX,CAhBI;MADI,CAAZ;MAyBA,IAAIC,EAAC,GAAIjB,IAAI,CAACkB,QAAL,EAAT;MACA,IAAIC,OAAM,GAAI,CAAC,KAAKC,iBAAL,CAAuBb,UAAxB,CAAd;MACA,IAAIc,YAAW,GAAIrB,IAAI,CAACsB,KAAL,CAAWC,aAAX,CAAyBV,GAAG,CAACR,IAA7B,EAAmC;QAACmB,MAAM,EAAE,KAAKJ,iBAAL,CAAuBZ,aAAhC;QAA+CiB,UAAU,EAAE,IAA3D;QAAiEC,MAAM,EAAE;MAAzE,CAAnC,CAAnB,CAjCW,CAkCX;;MACAL,YAAY,CAAC,OAAD,CAAZ,GAAwB,CAAC;QAACM,KAAK,EAAE;MAAR,CAAD,EAAc;QAACA,KAAK,EAAE;MAAR,CAAd,EAA2B;QAACA,KAAK,EAAE;MAAR,CAA3B,CAAxB;MACA3B,IAAI,CAACsB,KAAL,CAAWM,cAAX,CAA0BP,YAA1B,EAAwCF,OAAxC,EAAiD;QAACM,UAAU,EAAE,IAAb;QAAmBC,MAAM,EAAE;MAA3B,CAAjD;MACA1B,IAAI,CAACsB,KAAL,CAAWO,iBAAX,CAA6BZ,EAA7B,EAAiCI,YAAjC,EAA+C,KAA/C;MACArB,IAAI,CAAC8B,SAAL,CAAeb,EAAf,EAAmB,eAAnB,EAAoC;QAACc,UAAU,EAAE;MAAb,CAApC,EAtCW,CAuCb;IACD,CAzCM;;IA0CPrB,sBAAsB,GAAG;MACvB,IAAIJ,kBAAiB,GAAI,EAAzB,CADuB,CAEvB;;MACAA,kBAAkB,CAAC,SAAD,CAAlB,GAAgC,QAAhC;MACAA,kBAAkB,CAAC,KAAD,CAAlB,GAA4B,KAA5B;MACAA,kBAAkB,CAAC,SAAD,CAAlB,GAAgC,SAAhC;MAEA,KAAKA,kBAAL,CAAwBC,UAAxB,GAAqCyB,MAAM,CAACC,IAAP,CAAY3B,kBAAZ,CAArC;MACA,KAAKA,kBAAL,CAAwBE,aAAxB,GAAwC,KAAKF,kBAAL,CAAwBC,UAAxB,CAAmC2B,GAAnC,CAAuC,UAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyB;QACtG,OAAOjB,iBAAiB,CAACe,IAAD,CAAxB;MACD,CAFuC,CAAxC;IAGF;;EArDO;AAjBI,CAAf","names":["XLSX","HelloWorld","Modal","name","components","data","downloadFileHeader","headerName","headerMapping","created","setExcelDownloadHeader","methods","downloadFile","res","myName","age","address","wb","book_new","jobHarr","downloadJobHeader","jobWorksheet","utils","json_to_sheet","header","skipHeader","origin","width","sheet_add_json","book_append_sheet","writeFile","cellStyles","Object","keys","map","item","idx","arr"],"sourceRoot":"","sources":["D:\\project\\download file excel\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Vue app</h1>\n    <!-- <modal /> -->\n    <button @click=\"downloadFile\">Download File</button>\n  </div>\n</template>\n\n<script>\nimport XLSX from 'xlsx';\nimport HelloWorld from './components/HelloWorld.vue'\nimport Modal from './components/Modal.vue'\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld,\n    Modal\n  },\n  data() {\n    return {\n      downloadFileHeader: {\n        headerName: {},\n        headerMapping: {},\n      }\n    }\n  },\n  created() {\n    this.setExcelDownloadHeader();\n  },\n  methods: {\n    downloadFile() {\n      // let axios = {}\n      // let url = {}\n      // axios.post(url, {\n        // body api\n      // }).then(res => {\n        const res = {\n          data: [\n            {\n              myName: \"Đức\",\n              age: 18,\n              address: \"HN\"\n            },\n            {\n              myName: \"Đức\",\n              age: 18,\n              address: \"HN\"\n            },\n            {\n              myName: \"Đức\",\n              age: 18,\n              address: \"HN\"\n            },\n            {\n              myName: \"Đức\",\n              age: 18,\n              address: \"HN\"\n            }\n\n          ]\n        }\n        var wb = XLSX.book_new();\n        var jobHarr = [this.downloadJobHeader.headerName];\n        var jobWorksheet = XLSX.utils.json_to_sheet(res.data, {header: this.downloadJobHeader.headerMapping, skipHeader: true, origin: 'A2'});\n        // set width for column\n        jobWorksheet[\"!cols\"] = [{width: 20}, {width: 20}, {width: 20}];\n        XLSX.utils.sheet_add_json(jobWorksheet, jobHarr, {skipHeader: true, origin: 'A1'});\n        XLSX.utils.book_append_sheet(wb, jobWorksheet, 'Job');\n        XLSX.writeFile(wb, 'NameFile.xlsx', {cellStyles: true });\n      // })\n    },\n    setExcelDownloadHeader() {\n      var downloadFileHeader = {};\n      // set header column excel\n      downloadFileHeader['my Name'] = 'myName';\n      downloadFileHeader['age'] = 'age';\n      downloadFileHeader['address'] = 'address';\n\n      this.downloadFileHeader.headerName = Object.keys(downloadFileHeader);\n      this.downloadFileHeader.headerMapping = this.downloadFileHeader.headerName.map(function(item, idx, arr) {\n        return downloadJobHeader[item];\n      })\n    }\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}