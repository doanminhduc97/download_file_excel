{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"Vue app\", -1\n/* HOISTED */\n);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createCommentVNode(\" <modal /> \"), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.downloadFile && $options.downloadFile(...args))\n  }, \"Download File\")]);\n}","map":{"version":3,"mappings":";;gCAEIA,oBAAgB,IAAhB,EAAgB,IAAhB,EAAI,SAAJ,EAAW;AAAA;AAAX;;;uBADFC,oBAIM,KAJN,EAIM,IAJN,EAIM,CAHJC,UAGI,EAFJC,kCAEI,EADJH,oBAAoD,QAApD,EAAoD;IAA3CI,OAAK,yCAAEC,uDAAF;EAAsC,CAApD,EAA8B,eAA9B,CACI,CAJN","names":["_createElementVNode","_createElementBlock","_hoisted_1","_createCommentVNode","onClick","$options"],"sourceRoot":"","sources":["D:\\project\\download file excel\\src\\App.vue"],"sourcesContent":["<template>\n  <div>\n    <h1>Vue app</h1>\n    <!-- <modal /> -->\n    <button @click=\"downloadFile\">Download File</button>\n  </div>\n</template>\n\n<script>\nimport XLSX from 'xlsx';\nimport HelloWorld from './components/HelloWorld.vue'\nimport Modal from './components/Modal.vue'\nexport default {\n  name: 'App',\n  components: {\n    HelloWorld,\n    Modal\n  },\n  data() {\n    return {\n      downloadJobHeaders: {\n        headerName: {},\n        headerMapping: {},\n      }\n    }\n  },\n  created() {\n    this.setExcelDownloadHeader();\n  },\n  methods: {\n    downloadFile() {\n      // let axios = {}\n      // let url = {}\n      // axios.post(url, {\n        // body api\n      // }).then(res => {\n        const res = {\n          data: [\n            {\n              myName: \"Đức\",\n              age: 18,\n              address: \"HN\"\n            },\n            {\n              myName: \"Đức\",\n              age: 18,\n              address: \"HN\"\n            },\n            {\n              myName: \"Đức\",\n              age: 18,\n              address: \"HN\"\n            },\n            {\n              myName: \"Đức\",\n              age: 18,\n              address: \"HN\"\n            }\n\n          ]\n        }\n        var wb = XLSX.book_new();\n        var jobHarr = [this.downloadJobHeaders.headerName];\n        var jobWorksheet = XLSX.utils.json_to_sheet(res.data, {header: this.downloadJobHeaders.headerMapping, skipHeader: true, origin: 'A2'});\n        // set width for column\n        jobWorksheet[\"!cols\"] = [{width: 20}, {width: 20}, {width: 20}];\n        XLSX.utils.sheet_add_json(jobWorksheet, jobHarr, {skipHeader: true, origin: 'A1'});\n        XLSX.utils.book_append_sheet(wb, jobWorksheet, 'Job');\n        XLSX.writeFile(wb, 'NameFile.xlsx', {cellStyles: true });\n      // })\n    },\n    setExcelDownloadHeader() {\n      var downloadJobHeaders = {};\n      // set header column excel\n      downloadJobHeaders['my Name'] = 'myName';\n      downloadJobHeaders['age'] = 'age';\n      downloadJobHeaders['address'] = 'address';\n\n      this.downloadJobHeaders.headerName = Object.keys(downloadFileHeader);\n      this.downloadJobHeaders.headerMapping = this.downloadFileHeader.headerName.map(function(item, idx, arr) {\n        return downloadJobHeaders[item];\n      })\n    }\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}